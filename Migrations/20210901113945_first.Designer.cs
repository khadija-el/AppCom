// <auto-generated />
using System;
using ApiCom.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace api.Migrations
{
    [DbContext(typeof(ApiComContext))]
    [Migration("20210901113945_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiCom.Models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrixAchat_HT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrixAchat_TTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrixVente_HT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrixVente_TTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QteAcheté")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QteVendue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("stockFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("stockInitial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("stockMinimal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Reference")
                        .IsUnique()
                        .HasFilter("[Reference] IS NOT NULL");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ApiCom.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raisonsociale")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Raisonsociale")
                        .IsUnique()
                        .HasFilter("[Raisonsociale] IS NOT NULL");

                    b.HasIndex("code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ApiCom.Models.DetailLivraisonClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdArticle")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdLivraisonClient")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TVA")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticle");

                    b.HasIndex("IdLivraisonClient");

                    b.ToTable("DetailLivraisonClients");
                });

            modelBuilder.Entity("ApiCom.Models.LivraisonClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Escompte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdClient")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUser")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdUser");

                    b.HasIndex("Numero")
                        .IsUnique()
                        .HasFilter("[Numero] IS NOT NULL");

                    b.ToTable("LivraisonClients");
                });

            modelBuilder.Entity("ApiCom.Models.Profil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelAr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profil");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Administrateur",
                            LabelAr = "مدير"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Superviseur",
                            LabelAr = "مشرف"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Point focal",
                            LabelAr = "	المخاطب الرئيسي"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Propriétaire",
                            LabelAr = "مالك"
                        });
                });

            modelBuilder.Entity("ApiCom.Models.ReglementClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("D_Creation")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdLivraisonClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdLivraisonClient");

                    b.ToTable("ReglementClients");
                });

            modelBuilder.Entity("ApiCom.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfilId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfilId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiCom.Models.DetailLivraisonClient", b =>
                {
                    b.HasOne("ApiCom.Models.Article", "Article")
                        .WithMany("DetailLivraisonClients")
                        .HasForeignKey("IdArticle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCom.Models.LivraisonClient", "LivraisonClient")
                        .WithMany("DetailLivrasoinClients")
                        .HasForeignKey("IdLivraisonClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("LivraisonClient");
                });

            modelBuilder.Entity("ApiCom.Models.LivraisonClient", b =>
                {
                    b.HasOne("ApiCom.Models.Client", "Client")
                        .WithMany("LivrasoinClients")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCom.Models.User", "User")
                        .WithMany("LivrasoinClients")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiCom.Models.ReglementClient", b =>
                {
                    b.HasOne("ApiCom.Models.LivraisonClient", "LivraisonClient")
                        .WithMany("ReglementClient")
                        .HasForeignKey("IdLivraisonClient");

                    b.Navigation("LivraisonClient");
                });

            modelBuilder.Entity("ApiCom.Models.User", b =>
                {
                    b.HasOne("ApiCom.Models.Profil", null)
                        .WithMany("User")
                        .HasForeignKey("ProfilId");
                });

            modelBuilder.Entity("ApiCom.Models.Article", b =>
                {
                    b.Navigation("DetailLivraisonClients");
                });

            modelBuilder.Entity("ApiCom.Models.Client", b =>
                {
                    b.Navigation("LivrasoinClients");
                });

            modelBuilder.Entity("ApiCom.Models.LivraisonClient", b =>
                {
                    b.Navigation("DetailLivrasoinClients");

                    b.Navigation("ReglementClient");
                });

            modelBuilder.Entity("ApiCom.Models.Profil", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiCom.Models.User", b =>
                {
                    b.Navigation("LivrasoinClients");
                });
#pragma warning restore 612, 618
        }
    }
}
